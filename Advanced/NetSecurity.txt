1. OSI模型
由高到低：
1）应用层：为特定类型的网络应用提供访问OSI环境的手段，如HTTP，DHCP等
    - TCP协议服务及端口号：
        - HTTP（超文本传输协议）：80，传输Internet浏览器普通文本、超文本、音视频等数据
        - HTTPS（安全文本传输协议）：443，基于HTTP，应用了安全套接字层（SSL），可对数据进行加密和压缩
        - FTP（文件传输协议）：21（控制数据传输）/20（数据传输），用于文件传输，能进行目录操作和文件权限操作
        - SSH（安全外壳协议）：22
        - Telnet（远程登录）：23
        - SMTP（简单邮件传输协议）：25，负责服务器之间的邮件传送
        - POP3（邮局协议版本3）：110，用于支持客户端远程管理在服务器上的电子邮件
        - IMAP（交互式邮件存取协议）：143，类似POP3，但客户端收取的邮件会保留在服务器上，同时客户端上的操作会反馈到服务器上
    - UDP协议服务及端口号：
        - DNS（域名服务器）：53，用于域名解析
        - TFTP（简单文件传输协议）：69，类似TCP上的FTP，仅进行文件上传和下载
2）表示层：对数据进行翻译、加密、压缩等操作
3）会话层：确定会话的连接和中断
4）传输层：负责向两个主机中进程之间的通信提供端到端接口
    - 传输控制协议（TCP）：面向连接，面向字节流，可靠，全双工
        - TCP报文（封装在网络层的IP数据报中）：
            - 报头：源端口（16位），目的端口（16）；
                   序列号（32，SYN标识位1时为初始序列号）；
                   确认序列号（32，如果ACK标识位1则为准备接收的报文序列号）；
                   数据偏移（4，数据从何处开始），保留（6），标识位（6：URG、ACK、PSH、RST、SYN、FIN），窗口大小（16）；
                   校验和（16），紧急指针（16，URG标识位1时生效）；
                   选项（1 - ？，长度不定，没有选项即1字节的域等于0）
            - 数据：TCP报文负载的数据
        - 三次握手：
            - A -> B：客户端A向服务器B发出建立连接请求，SYN=j（j为序列号，SYN标识位为1）
            - A <- B：服务器B收到并确认客户端A，SYN=k，ACK=j+1（ACK为确认，确认号为收到的序列号+1）
            - A -> B：客户端A收到并确认服务端B，ACK=k+1
        - 四次挥手：
            - A -> B：客户端A数据发送完，向服务器B发出释放连接请求，FIN=m（m为序列号，FIN标识位为1）
            - A <- B：服务器B收到并确认客户端A，等待数据传输完成，ACK=m+1（ACK为确认，确认号为收到的序列号+1）
            - A <- B：数据传输完成，向客户端A发出释放连接请求，FIN=n，ACK=m+1
            - A -> B：客户端A收到并确认服务端B，ACK=n+1
    - 用户数据报协议（UDP）：无连接，面向报文，不可靠
        - UDP报文（封装在网络层的IP数据报中）：
            - 报头：源端口（16位），目的端口（16）；
                   长度（16，UDP报文长度，最小为8，只有报头），校验和（16）
            - 数据：UDP报文负载的数据
5）网络层：处理不同网络之间的数据路由和发送，包括路由选择、分段组合、流量/拥塞控制等
    - 网际协议地址（IP地址，IPv4/IPv6）：为互联网每个网络/主机分配一个逻辑地址（网络拓扑分配）
        - IP数据报（封装在数据链路层的帧的数据中）：
            - 报头：IP协议版本（4位），报头长度（4），服务类型（8：优先权3 短延时位1 高吞吐位1 高可靠位1 保留2），总长度（16）；
                   标识（16，MTU导致分片后正确重组），标志（3，无效-能否分片-后面还有分片），片偏移（13，片在分组相对位置）；
                   生存时间（8，限制路由跳数），上层协议标识（8，TCP/UDP等），校验和（16，通过报头校验有效性）；
                   源IP地址（32）；
                   目的IP地址（32）；
                   选项（1 - 40，支持排错、测量以及安全等，IPv6固定）
            - 数据：不同MTU（最大传输单元）存在分片问题，将数据分成连续片
        - IPv4分类（IPv4 32位， 分网络地址 + 主机地址）：
            - A类：1-127.x.x.x（0x），单播地址，网络地址8，主机地址24
            - B类：128-191.x.x.x（10x），单播地址，网络地址16，主机地址16
            - C类：192-223.x.x.x（110x），单播地址，网络地址24，主机地址8
            - D类：224-239.x.x.x（1110x），多播地址
            - E类：240-255.x.x.x（11110x），保留
            - 特殊地址：全0/全1，127.0.0.1（代表本地IP地址）-127.255.255.255用于回路测试
            - 默认子网掩码：网络地址为1，主机地址为0
            - 子网划分（从主机地址划子网）：把每类IP网络划分成子网，如255.255.255.192/26代表子网掩码有26个1，其子网数有(主机地址位-(32-26))^2
            - 超网划分（从网络地址划超网）：把若干小网络组合成超网
            - 公网连Internet，私网连局域网
    - 地址解析协议（ARP）：实现IP地址到MAC地址的转换
        - 发送ARP包，通过FF:FF:FF:FF:FF:FF + IP广播，获取目的MAC地址
        - ARP攻击：主要存在局域网中，通过发送ARP欺骗包（伪造IP及MAC地址），进行嗅探（截取数据再转发），网关欺骗（无法上网），IP地址冲突
    - Internet控制报文协议（ICMP）：用于在IP主机、路由器之间传递控制消息
        - ICMP报文包含在IP数据报的数据中
        - 消息类型：
            - 响应请求：发送响应请求报文（type=8），没有异常则返回应答请求报文（type=0），如ping
            - 目标不可到达，源抑制和超时报文：发送不可达报文（type=3， code=？），告知具体的不可达信息（code决定）
            - 时间戳：发送时间戳请求报文（type=13），收到返回的时间戳应答报文（type=14），计算来回一次的传输时间
        - ICMP攻击：通过发送ICMP报文，进行ICMP超限尺寸攻击（部分操作系统设限导致内存分配错误），ICMP报文轰炸（长时间，大量，连续）
    - Internet组管理协议（IGMP）：用于在IP主机和与其直接相邻的组播路由器之间建立、维护组播组成员关系
        - 组播：IP主机发给组播路由器（1份），组播路由器发给需要的组播组成员（多份）
        - IGMPv1：管理组播组成员基于查询（由组播路由协议如PIM决定IGMP查询器）和响应（超时响应来确定组播组成员离开）机制
        - IGMPv2：增加了查询器选举机制（IP地址最小成为查询器）和离开组（通知）机制
        - IGMPv3：增强了主机控制，查询和报告报文
    - 路由选择协议：
        - RIP协议：基于距离矢量的动态路由选择协议
        - OSPF协议：开放式最短路径优先
6）数据链路层：对电信号进行分组，即以太网协议Ethernet（标准），用于处理同一网络中不同设备之间的通信
    - 帧：一组电信号，分成报头head和数据data
        - 报头（固定18字节）：发送者/源MAC地址（6字节），接收者/目的MAC地址（6字节），数据类型（6字节）
        - 数据（46 - 1500字节）：数据包具体内容，超过最大限制分片
    - MAC地址（12位16进制）：Ethernet规定接入网络的设备都必要网卡，源/目的地址便是网卡的地址，即MAC地址（制造商分配）
    - 数据链路层工作方式：局域网广播
7）物理层：物理/硬件，中间物理链接如光缆、电缆、双绞线、无线电波；中间电信号，即010101...二进制
8）应用层，表示层，会话层 -> 应用层；数据链路层，物理层 -> 网络接口层

2. sshd_config部分详解
1）MaxSessions：控制单个TCP连接上支持的多路复用会话的数量
    - MaxSessions=0：禁止登录/shell/子系统会话
    - MaxSessions=1：禁用多路复用
    - MaxSessions=2+：允许多路复用

3. iptables
1）iptables位于用户空间，是一个命令行工具，其本质是Netfilter（Linux操作系统核心层内部的数据包处理模块）
2）iptables链：
    - INPUT：输入，到本机某进程的报文
    - OUTPUT：输出，由本机的某进程发出的报文（如响应报文）
    - PREROUTING：路由前，接收到报文，判断目的是否为本机，是则INPUT，否则FORWARD
    - FORWARD：转发
    - POSTROUTING：路由后，发送报文
3）iptables表：
    - filter表（内核模块：iptables_filter）：过滤，适用于INPUT，FORWARD，OUTPUT
    - nat表（iptable_nat）：网络地址转换功能，适用于路由/转发
    - mangle表（iptable_mangle）：拆解报文并修改，再重新封装，可用于ALL
    - raw表（iptable_raw）：关闭nat表上启用的连接追踪机制，适用于PREROUTING，OUTPUT
    - 规则优先级：raw -> mangle -> nat -> filter
4）匹配条件：
    - 基本匹配条件：源地址Source IP，目标地址Destination IP
    - 扩展匹配条件：源端口Source Port, 目标端口Destination Port
5）处理动作：
    - ACCEPT：允许数据包通过
    - DROP：直接丢弃数据包，不给任何回应信息，发送端超时才知
    - REJECT：拒绝数据包通过，必要时会给发送端发送响应
    - SNAT：源地址转换，解决内网用户用同一个公网地址上网的问题
    - MASQUERADE：是SNAT的一种特殊形式，适用于动态的IP
    - DNAT：目标地址转换。、
    - REDIRECT：在本机做端口映射
    - LOG：/var/log/messages文件中记录日志信息，不做处理
6）iptables使用举例：iptables -t filter -I INPUT -s x.x.x.x -j DROP
    - t：指定要操作的表，不使用-t默认操作filter表
    - I：插入，即在添加规则（默认链首（可跟编号指定插入位置），-A则是在链尾添加，-D删除指定编号，-F清空）
    - s：匹配条件中的源地址
    - j：匹配条件满足时执行的处理工作
    - 解释：将规则[将来自x.x.x.x的报文都丢弃]插入filter表中